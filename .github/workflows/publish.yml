name: CI & Publish (Fixed & Non-Spamming)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies and run tests
        run: |
          echo "=== Installing dependencies ==="
          npm ci --verbose
          echo "=== Running tests ==="
          node tests.js

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.actor != 'github-actions[bot]'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (with PAT)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install dependencies
        run: npm ci --verbose

      - name: Bump version and push
        id: bump-version
        run: |
          NEW_VERSION=$(npm version patch --git-tag-version --verbose)
          echo "new_version=${NEW_VERSION#v}" >> $GITHUB_OUTPUT
          git push origin main --follow-tags --verbose

      - name: Clean old tags
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          git tag | grep -v "$LATEST_TAG" | xargs -n 1 git tag -d || echo "No local tags to delete"
          git tag -l | grep -v "$LATEST_TAG" | xargs -n 1 git push origin --delete || echo "No remote tags to delete"

      - name: Publish to npm
        run: |
          echo "=== Publishing to npm ==="
          npm publish --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          tag_name: "v${{ steps.bump-version.outputs.new_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
